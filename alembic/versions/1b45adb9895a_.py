"""empty message

Revision ID: 1b45adb9895a
Revises: b0e3211650e3
Create Date: 2022-04-23 23:33:24.028736

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '1b45adb9895a'
down_revision = 'b0e3211650e3'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('rule',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('housing_pricing',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('per_night', sa.Integer(), nullable=False),
    sa.Column('cleaning', sa.Integer(), nullable=False),
    sa.Column('service', sa.Integer(), nullable=False),
    sa.Column('discount_per_week', sa.Integer(), nullable=False),
    sa.Column('discount_per_month', sa.Integer(), nullable=False),
    sa.Column('housing_id', sa.Integer(), nullable=True),
    sa.CheckConstraint('cleaning >= 0'),
    sa.CheckConstraint('discount_per_month >= 0'),
    sa.CheckConstraint('discount_per_week >= 0'),
    sa.CheckConstraint('per_night >= 0'),
    sa.CheckConstraint('service >= 0'),
    sa.ForeignKeyConstraint(['housing_id'], ['housing.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('housing_rule',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('housing_id', sa.Integer(), nullable=True),
    sa.Column('rule_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['housing_id'], ['housing.id'], ),
    sa.ForeignKeyConstraint(['rule_id'], ['rule.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_constraint('housing_calendar_id_fkey', 'housing', type_='foreignkey')
    op.drop_column('housing', 'pricing_id')
    op.drop_column('housing', 'calendar_id')
    op.add_column('housing_calendar', sa.Column('housing_id', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'housing_calendar', 'housing', ['housing_id'], ['id'])
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'housing_calendar', type_='foreignkey')
    op.drop_column('housing_calendar', 'housing_id')
    op.add_column('housing', sa.Column('calendar_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('housing', sa.Column('pricing_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.create_foreign_key('housing_calendar_id_fkey', 'housing', 'housing_calendar', ['calendar_id'], ['id'])
    op.drop_table('housing_rule')
    op.drop_table('housing_pricing')
    op.drop_table('rule')
    # ### end Alembic commands ###
